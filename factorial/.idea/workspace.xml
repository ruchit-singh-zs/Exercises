<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="6c5356d0-0a61-491b-bba2-96bda5cb43f0" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/../employee/empAge_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../prime/prime_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../bob/bobreply.go" beforeDir="false" afterPath="$PROJECT_DIR$/../bob/bobreply.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../bob/bobreply_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/../bob/bobreply_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../employee/empcode.go" beforeDir="false" afterPath="$PROJECT_DIR$/../employee/empAge.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../employee/empcode_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../leap-year/yearcheck.go" beforeDir="false" afterPath="$PROJECT_DIR$/../leap-year/yearcheck.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../leap-year/yearcheck_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/../leap-year/yearcheck_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../pascals/triangle.go" beforeDir="false" afterPath="$PROJECT_DIR$/../pascals/triangle.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../pascals/triangle_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/../pascals/triangle_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../prime/compute.go" beforeDir="false" afterPath="$PROJECT_DIR$/../prime/prime.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../prime/compute_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../triangle/type.go" beforeDir="false" afterPath="$PROJECT_DIR$/../triangle/type.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../triangle/type_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/../triangle/type_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../twofer/compute.go" beforeDir="false" afterPath="$PROJECT_DIR$/../twofer/compute.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../twofer/compute_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/../twofer/compute_test.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="23aU1UReVw6F7GNTCVw3XzPh7gr" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
  </component>
  <component name="RunManager" selected="Go Test.go test exercises/factorial">
    <configuration name="go build exercises/factorial" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="factorial" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="exercises/factorial" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/check.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestFact in exercises/factorial" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="factorial" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="exercises/factorial" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestFact\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test exercises/factorial" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="factorial" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="exercises/factorial" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="gobench exercises/factorial" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="factorial" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="exercises/factorial" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gobench" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test exercises/factorial" />
        <item itemvalue="Go Test.gobench exercises/factorial" />
        <item itemvalue="Go Test.TestFact in exercises/factorial" />
        <item itemvalue="Go Build.go build exercises/factorial" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/factorial$go_test_exercises_factorial.out" NAME="go test exercises/factorial Coverage Results" MODIFIED="1641978472867" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>